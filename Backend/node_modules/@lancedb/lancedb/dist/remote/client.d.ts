/// <reference types="node" />
import { type AxiosResponse } from "axios";
import { Table as ArrowTable } from "../arrow";
import { VectorQuery } from "../query";
export declare class RestfulLanceDBClient {
    #private;
    constructor(dbName: string, apiKey: string, region: string, hostOverride?: string, timeout?: number);
    get session(): import("axios").AxiosInstance;
    get url(): string;
    get headers(): {
        [key: string]: string;
    };
    isOpen(): boolean;
    private checkNotClosed;
    close(): void;
    get(uri: string, params?: Record<string, any>): Promise<any>;
    post(uri: string, body?: any): Promise<any>;
    post(uri: string, body: any, additional: {
        config?: {
            responseType: "arraybuffer";
        };
        headers?: Record<string, string>;
        params?: Record<string, string>;
    }): Promise<Buffer>;
    listTables(limit?: number, pageToken?: string): Promise<string[]>;
    query(tableName: string, query: VectorQuery): Promise<ArrowTable>;
    static checkStatus(response: AxiosResponse): void;
}
