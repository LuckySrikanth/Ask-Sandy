import { ModelRequestOptions, ChatResponse, ChatRequestMessage } from 'llm-api';
import { z } from 'zod';
export type RequestOptions<T extends z.ZodType> = Omit<ModelRequestOptions, 'functions' | 'callFunction'> & {
    schema?: T;
    functionName?: string;
    functionDescription?: string;
    autoSlice?: boolean;
    autoHeal?: boolean;
    messageHistory?: ChatRequestMessage[];
};
export type Response<T extends z.ZodType> = {
    respond: (message: string | ChatRequestMessage, opt?: ModelRequestOptions) => Promise<Response<T>>;
    data: z.infer<T>;
} & ChatResponse;
//# sourceMappingURL=types.d.ts.map